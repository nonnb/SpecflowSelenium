// <auto-generated />
using BankingWebApp.Repo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankingWebApp.Migrations
{
    [DbContext(typeof(BankDbContext))]
    partial class BankDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BankingWebApp.Models.AccountType", b =>
                {
                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountTypeId");

                    b.ToTable("AccountType");

                    b.HasData(
                        new
                        {
                            AccountTypeId = 1,
                            Name = "Savings"
                        },
                        new
                        {
                            AccountTypeId = 2,
                            Name = "Cheque"
                        });
                });

            modelBuilder.Entity("BankingWebApp.Models.BankAccount", b =>
                {
                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountHolder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BankAccountNumber");

                    b.HasIndex("AccountTypeId");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("BankingWebApp.Models.BankAccount", b =>
                {
                    b.HasOne("BankingWebApp.Models.AccountType", "AccountType")
                        .WithMany()
                        .HasForeignKey("AccountTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AccountType");
                });
#pragma warning restore 612, 618
        }
    }
}
